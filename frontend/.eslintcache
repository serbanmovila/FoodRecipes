[{"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\index.js":"1","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\App.js":"2","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\AppNavigator\\AppNavigator.js":"3","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Dashboard.js":"4","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Auth\\AuthScreen.js":"5","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recommendations\\RecommendationsScreen.js":"6","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Constants.js":"7","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Navigation\\Navigation.js":"8","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\IngredientsScreen.js":"9","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\RecipesScreen.js":"10","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Header\\Header.js":"11","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\CommonStyledComponents.js":"12","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Components\\Ingredient.js":"13","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Components\\TableHeader.js":"14","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\Components\\Recipe.js":"15","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Components\\AddIngredientForm.js":"16","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Modal\\Modal.js":"17","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Reducer.js":"18","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Controllers\\IngredientsActions.js":"19","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Auth\\Controllers\\AuthActions.js":"20","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recommendations\\Components\\PickMeal.js":"21","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recommendations\\Components\\PickRecipes.js":"22","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\Components\\AddRecipeForm.js":"23","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\Controllers\\RecipeActions.js":"24"},{"size":929,"mtime":1613854909085,"results":"25","hashOfConfig":"26"},{"size":1194,"mtime":1613853709633,"results":"27","hashOfConfig":"26"},{"size":729,"mtime":1613821988127,"results":"28","hashOfConfig":"26"},{"size":1419,"mtime":1613567049960,"results":"29","hashOfConfig":"26"},{"size":13658,"mtime":1616510186497,"results":"30","hashOfConfig":"26"},{"size":1407,"mtime":1613890709894,"results":"31","hashOfConfig":"26"},{"size":66,"mtime":1613567049952,"results":"32","hashOfConfig":"26"},{"size":4913,"mtime":1613650272033,"results":"33","hashOfConfig":"26"},{"size":3763,"mtime":1616517389164,"results":"34","hashOfConfig":"26"},{"size":2564,"mtime":1616518386547,"results":"35","hashOfConfig":"26"},{"size":2336,"mtime":1613567049960,"results":"36","hashOfConfig":"26"},{"size":1055,"mtime":1613567049960,"results":"37","hashOfConfig":"26"},{"size":2384,"mtime":1616512215920,"results":"38","hashOfConfig":"26"},{"size":768,"mtime":1613567049960,"results":"39","hashOfConfig":"26"},{"size":1618,"mtime":1613567049960,"results":"40","hashOfConfig":"26"},{"size":2541,"mtime":1616517706195,"results":"41","hashOfConfig":"26"},{"size":411,"mtime":1613806568199,"results":"42","hashOfConfig":"26"},{"size":1064,"mtime":1616513293257,"results":"43","hashOfConfig":"26"},{"size":1396,"mtime":1616517326165,"results":"44","hashOfConfig":"26"},{"size":1393,"mtime":1616510036906,"results":"45","hashOfConfig":"26"},{"size":1554,"mtime":1613888689095,"results":"46","hashOfConfig":"26"},{"size":657,"mtime":1613891070940,"results":"47","hashOfConfig":"26"},{"size":8171,"mtime":1616522620449,"results":"48","hashOfConfig":"26"},{"size":731,"mtime":1616517901938,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1cl64se",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\index.js",[],["109","110"],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\App.js",["111","112","113"],"import './App.css'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport AppNavigator from './Screens/AppNavigator/AppNavigator'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { checkLogin } from './Screens/Auth/Controllers/AuthActions'\r\n\r\nfunction App(props) {\r\n    useEffect(() => {\r\n        props.checkLogin()\r\n    }, [])\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Switch>\r\n                    <Route path=\"/ingredients\">\r\n                        <AppNavigator screen=\"ingredients\" />\r\n                    </Route>\r\n                    <Route path=\"/recipes\">\r\n                        <AppNavigator screen=\"recipes\" />\r\n                    </Route>\r\n                    <Route path=\"/recommendations\">\r\n                        <AppNavigator screen=\"recommendations\" />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <AppNavigator />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default connect((state) => ({ ...state }), { checkLogin })(App)\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\AppNavigator\\AppNavigator.js",["114"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport AuthScreen from '../Auth/AuthScreen'\r\nimport Dashboard from './../Dashboard/Dashboard'\r\nimport { checkLogin } from './../Auth/Controllers/AuthActions'\r\n\r\nclass AppNavigator extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        const { screen, loggedIn } = this.props\r\n\r\n        if (loggedIn) {\r\n            return (\r\n                <Dashboard\r\n                    screen={screen === undefined ? 'ingredients' : screen}\r\n                />\r\n            )\r\n        } else return <AuthScreen />\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({ ...state }), {})(AppNavigator)\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Dashboard.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Auth\\AuthScreen.js",["115","116"],"import React from 'react'\r\nimport Header from './../../Helpers/Header/Header'\r\nimport styled from 'styled-components'\r\nimport bg from './../../assets/images/lp-bg.jpg'\r\nimport { constants as c } from './../../Helpers/Constants'\r\nimport { Kitchen, MenuBook, Fastfood } from '@material-ui/icons'\r\nimport { Button, TextField } from '@material-ui/core'\r\nimport Modal from './../../Helpers/Modal/Modal'\r\nimport { login, register } from './Controllers/AuthActions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: relative;\r\n    background: url(${bg});\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n`\r\n\r\nconst InnerContainer = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    padding-top: ${c.navHeight}px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n`\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n\r\n    & > div:not(:first-child) {\r\n        border-left: 1px solid rgba(255, 255, 255, 0.7);\r\n    }\r\n`\r\n\r\nconst Box = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 33.3%;\r\n\r\n    h3 {\r\n        color: white;\r\n        font-family: 'Source Sans Pro', sans-serif;\r\n        font-weight: 500;\r\n        font-size: 1.6vw;\r\n        max-width: 250px;\r\n    }\r\n\r\n    svg {\r\n        color: white;\r\n        width: 50px;\r\n        height: auto;\r\n    }\r\n`\r\n\r\nconst Tabs = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: #eee;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.3);\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.3);\r\n`\r\n\r\nconst Tab = styled.div`\r\n    width: 50%;\r\n    cursor: pointer;\r\n    transition: background 0.2s ease-in-out;\r\n\r\n    p {\r\n        font-family: 'Source Sans Pro', sans-serif;\r\n        text-align: center;\r\n    }\r\n\r\n    &.selected,\r\n    &:hover {\r\n        background: rgba(0, 0, 0, 0.1);\r\n    }\r\n`\r\n\r\nconst Form = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px 40px;\r\n\r\n    & > div {\r\n        margin: 10px auto;\r\n    }\r\n`\r\n\r\nconst InnerModal = styled.div`\r\n    background: white;\r\n    border-radius: 4px;\r\n`\r\n\r\nclass AuthScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            modal: false,\r\n            formType: 'login',\r\n            password: '',\r\n            email: '',\r\n            confirmPassword: '',\r\n            validCPW: true,\r\n            validPW: true,\r\n            validMail: true\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({ modal: false })\r\n    }\r\n\r\n    open = (type) => {\r\n        this.setState({ modal: true, formType: type })\r\n    }\r\n\r\n    switchTab = () => {\r\n        this.setState({\r\n            formType: this.state.formType === 'login' ? 'signup' : 'login'\r\n        })\r\n    }\r\n\r\n    validatePasswords = () => {\r\n        if (this.state.formType === 'signup') {\r\n            this.setState({\r\n                validCPW: this.state.password === this.state.confirmPassword,\r\n                validPW: this.state.password === this.state.confirmPassword\r\n            })\r\n        } else\r\n            this.setState({\r\n                validCPW: true,\r\n                validPW: true\r\n            })\r\n    }\r\n\r\n    updateValue = (type, content) => {\r\n        switch (type) {\r\n            case 'pw':\r\n                this.setState(\r\n                    {\r\n                        password: content\r\n                    },\r\n                    this.validatePasswords\r\n                )\r\n                break\r\n            case 'cpw':\r\n                this.setState(\r\n                    {\r\n                        confirmPassword: content\r\n                    },\r\n                    this.validatePasswords\r\n                )\r\n            case 'email':\r\n                this.setState({\r\n                    email: content\r\n                })\r\n        }\r\n    }\r\n\r\n    signUp = () => {\r\n        if (this.state.validCPW && this.state.validPW && this.state.validMail) {\r\n            this.props.register(\r\n                {\r\n                    username: this.state.email,\r\n                    password: this.state.password,\r\n                    email: this.state.email\r\n                },\r\n                this.props.login\r\n            )\r\n        }\r\n    }\r\n\r\n    signIn = () => {\r\n        console.log(this.state.validPW && this.state.validMail)\r\n        if (this.state.validPW && this.state.validMail) {\r\n            this.props.login({\r\n                username: this.state.email,\r\n                password: this.state.password\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { close, open } = this\r\n        return (\r\n            <>\r\n                <Header openModal={open} />\r\n                <Container>\r\n                    <InnerContainer>\r\n                        <Modal close={close} open={this.state.modal}>\r\n                            <InnerModal>\r\n                                <Tabs>\r\n                                    <Tab\r\n                                        style={{\r\n                                            borderRight:\r\n                                                '1px solid rgba(0,0,0,0.3)'\r\n                                        }}\r\n                                        className={\r\n                                            this.state.formType === 'login'\r\n                                                ? 'selected'\r\n                                                : ''\r\n                                        }\r\n                                        onClick={this.switchTab}\r\n                                    >\r\n                                        <p>Log in</p>\r\n                                    </Tab>\r\n                                    <Tab\r\n                                        onClick={this.switchTab}\r\n                                        className={\r\n                                            this.state.formType === 'signup'\r\n                                                ? 'selected'\r\n                                                : ''\r\n                                        }\r\n                                    >\r\n                                        <p>Sign up</p>\r\n                                    </Tab>\r\n                                </Tabs>\r\n                                <Form>\r\n                                    {this.state.formType === 'login' ? (\r\n                                        <>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Email\"\r\n                                                variant=\"outlined\"\r\n                                                onChange={(e) => {\r\n                                                    this.updateValue(\r\n                                                        'email',\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Password\"\r\n                                                variant=\"outlined\"\r\n                                                onChange={(e) => {\r\n                                                    this.updateValue(\r\n                                                        'pw',\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                size=\"large\"\r\n                                                onClick={this.signIn}\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    marginTop: '30px'\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Email\"\r\n                                                variant=\"outlined\"\r\n                                                onChange={(e) => {\r\n                                                    this.updateValue(\r\n                                                        'email',\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Password\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"password\"\r\n                                                onChange={(e) => {\r\n                                                    this.updateValue(\r\n                                                        'pw',\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <TextField\r\n                                                id=\"outlined-basic\"\r\n                                                label=\"Confirm password\"\r\n                                                variant=\"outlined\"\r\n                                                type=\"password\"\r\n                                                onChange={(e) => {\r\n                                                    this.updateValue(\r\n                                                        'cpw',\r\n                                                        e.target.value\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                size=\"large\"\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    marginTop: '30px'\r\n                                                }}\r\n                                                onClick={this.signUp}\r\n                                            >\r\n                                                Sign up\r\n                                            </Button>\r\n                                        </>\r\n                                    )}\r\n                                </Form>\r\n                            </InnerModal>\r\n                        </Modal>\r\n                        <ContentContainer>\r\n                            <Content>\r\n                                <Box>\r\n                                    <Kitchen />\r\n                                    <h3>Keep track of your ingredients</h3>\r\n                                </Box>\r\n                                <Box>\r\n                                    <MenuBook />\r\n                                    <h3>Keep track of your recipes</h3>\r\n                                </Box>\r\n                                <Box>\r\n                                    <Fastfood />\r\n                                    <h3>\r\n                                        Get recipe recommendations based on what\r\n                                        you like\r\n                                    </h3>\r\n                                </Box>\r\n                            </Content>\r\n                        </ContentContainer>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                                color: 'black',\r\n                                marginTop: '7%'\r\n                            }}\r\n                            size=\"large\"\r\n                            onClick={() => {\r\n                                open('login')\r\n                            }}\r\n                        >\r\n                            Sign up\r\n                        </Button>\r\n                    </InnerContainer>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({ ...state }), { login, register })(\r\n    AuthScreen\r\n)\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recommendations\\RecommendationsScreen.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Constants.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Navigation\\Navigation.js",["117"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Menu } from '@material-ui/icons'\r\nimport {Button, IconButton} from '@material-ui/core/'\r\nimport img1 from '../../assets/images/1.jpg'\r\nimport img2 from '../../assets/images/2.jpg'\r\nimport img3 from '../../assets/images/3.jpg'\r\nimport img4 from '../../assets/images/4.jpg'\r\nimport img5 from '../../assets/images/5.jpg'\r\nimport img6 from '../../assets/images/6.jpg'\r\nimport img7 from '../../assets/images/7.jpg'\r\n\r\nconst NavContainer = styled.div`\r\n  max-width: 300px;\r\n  min-width: 250px;\r\n  width: 20%;\r\n  height: 100vh;\r\n  align-items: center;\r\n  background: white;\r\n  -webkit-box-shadow: -3px -1px 6px 0px rgba(0, 0, 0, 0.75);\r\n  -moz-box-shadow: -3px -1px 6px 0px rgba(0, 0, 0, 0.75);\r\n  box-shadow: -3px -1px 6px 0px rgba(0, 0, 0, 0.75);\r\n  z-index: 3;\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  @media (max-width: 600px) {\r\n    height: 100%;\r\n    position: fixed;\r\n    width: 250px;\r\n    top: 0;\r\n    transition: left 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nconst NavBgOverlay = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  background: rgb(55, 59, 96, 0.76);\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Nav = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  @media (max-width: 600px) {\r\n    height: 100%;\r\n    width: 250px;\r\n    top: 0;\r\n    left: -250px;\r\n    transition: left 0.2s ease-in-out;\r\n  }\r\n`\r\n\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n\r\n  button {\r\n    border-radius: 0px;\r\n    padding: 4% 0;\r\n    color: rgba(255, 255, 255, 0.9);\r\n    text-transform: none;\r\n    letter-spacing: 1px;\r\n\r\n    span {\r\n      text-align: left;\r\n      padding-left: 10%;\r\n      display: flex;\r\n      justify-content: flex-start;\r\n    }\r\n\r\n    :not(:first-child) {\r\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    &.active {\r\n      background: rgba(0, 0, 0, 0.3);\r\n    }\r\n  }\r\n`\r\n\r\nconst NavHeader = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  @media (max-width: 600px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst MobileNavHeader = styled.div`\r\n  display: none;\r\n  \r\n  @media (max-width: 600px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px 20px;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    background-color: #efeff7;\r\n  }\r\n`\r\n\r\nconst Logo = styled.h1`\r\n  font-family: 'Libre Baskerville', serif;\r\n  font-style: italic;\r\n  color: white;\r\n  font-size: 130%;\r\n  letter-spacing: 2px;\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  margin-left: 10%;\r\n\r\n  @media (max-width: 600px) {\r\n    color: rgba(0,0,0,0.8);\r\n    margin: auto 0;\r\n  }\r\n`\r\n\r\nconst MenuBtn = styled.span`\r\n  cursor: pointer;\r\n`\r\n\r\nconst Mask = styled.div`\r\n  background-color: rgba(0,0,0,0.5);\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 2;\r\n`\r\n\r\nexport default class Navigation extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      mobileNavState: \"-250px\"\r\n    }\r\n  }\r\n\r\n  switchNav = () => {\r\n    if (this.state.mobileNavState === \"-250px\") {\r\n      this.setState({\r\n        mobileNavState: \"0px\"\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        mobileNavState: \"-250px\"\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { screen } = this.props\r\n\r\n    let bg,\r\n      bgs = [img1, img2, img3, img4, img5, img6, img7]\r\n\r\n    bg = bgs[Math.floor(Math.random() * 7)]\r\n\r\n    return (\r\n      <>\r\n      {this.state.mobileNavState === \"0px\" && <Mask onClick={this.switchNav}/>}\r\n      <MobileNavHeader>\r\n        <Logo>FoodRecipes</Logo>\r\n        <IconButton onClick={this.switchNav}><Menu/></IconButton>\r\n      </MobileNavHeader>\r\n      <NavContainer\r\n        style={{\r\n          backgroundImage: `url(${bg})`,\r\n          left: this.state.mobileNavState\r\n        }}\r\n      >\r\n        <NavBgOverlay>\r\n          <NavHeader>\r\n            <Logo>FoodRecipes</Logo>\r\n          </NavHeader>\r\n          <Nav>\r\n            <List>\r\n              <Button\r\n                className={screen === 'ingredients' ? 'active' : ''}\r\n                onClick={() => this.props.switchScreen('ingredients')}\r\n              >\r\n                Ingredients\r\n              </Button>\r\n              <Button\r\n                className={screen === 'recipes' ? 'active' : ''}\r\n                onClick={() => this.props.switchScreen('recipes')}\r\n              >\r\n                Recipes\r\n              </Button>\r\n              <Button\r\n                className={screen === 'recommendations' ? 'active' : ''}\r\n                onClick={() => this.props.switchScreen('recommendations')}\r\n              >\r\n                Get recommendation\r\n              </Button>\r\n            </List>\r\n          </Nav>\r\n        </NavBgOverlay>\r\n      </NavContainer>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\IngredientsScreen.js",["118"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Ingredient from './Components/Ingredient'\r\nimport TableHeader from './Components/TableHeader'\r\nimport { Button } from '@material-ui/core'\r\nimport Modal from '../../../Helpers/Modal/Modal'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport { Container, Header, HeaderContent } from '../CommonStyledComponents'\r\nimport AddIngredientForm from './Components/AddIngredientForm'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getIngredients,\r\n    deleteIngredient,\r\n    updateIngredient\r\n} from './Controllers/IngredientsActions'\r\n\r\nconst IngredientsList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    max-height: 100%;\r\n    overflow: auto;\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n        width: 6px;\r\n    }\r\n\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n        background: transparent;\r\n    }\r\n\r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n        background: rgba(0, 0, 0, 0.3);\r\n        border-radius: 8px;\r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(0, 0, 0, 0.5);\r\n    }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: white;\r\n    border-radius: 8px;\r\n    -webkit-box-shadow: 2px 2px 30px 0px rgba(0, 0, 0, 0.1);\r\n    -moz-box-shadow: 2px 2px 30px 0px rgba(0, 0, 0, 0.1);\r\n    box-shadow: 2px 2px 30px 0px rgba(0, 0, 0, 0.1);\r\n    height: 80%;\r\n`\r\n\r\nclass IngredientsScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            openModal: false\r\n        }\r\n    }\r\n\r\n    close = () => {\r\n        this.setState({\r\n            openModal: false\r\n        })\r\n    }\r\n\r\n    open = () => {\r\n        this.setState({\r\n            openModal: true\r\n        })\r\n    }\r\n\r\n    deleteIngredient = (id) => {\r\n        this.props.deleteIngredient(id, this.props.getIngredients)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getIngredients()\r\n    }\r\n\r\n    render() {\r\n        const { ingredients } = this.props\r\n        return (\r\n            <>\r\n                <Container>\r\n                    <Header>\r\n                        <HeaderContent>\r\n                            <h3>Ingredients</h3>\r\n                            <p>\r\n                                View, add, edit and remove ingredients of all\r\n                                kinds.\r\n                            </p>\r\n                        </HeaderContent>\r\n                        <Button endIcon={<AddCircleIcon />} onClick={this.open}>\r\n                            New Ingredient\r\n                        </Button>\r\n                    </Header>\r\n                    <TableContainer>\r\n                        <TableHeader />\r\n                        <IngredientsList>\r\n                            {ingredients.map((ingredient) => {\r\n                                return (\r\n                                    <Ingredient\r\n                                        data={ingredient}\r\n                                        deleteIngredient={this.deleteIngredient}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </IngredientsList>\r\n                    </TableContainer>\r\n                </Container>\r\n                <Modal close={this.close} open={this.state.openModal}>\r\n                    <AddIngredientForm close={this.close} />\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        ingredients: state.ingredients,\r\n        token: state.token\r\n    }),\r\n    { getIngredients, deleteIngredient }\r\n)(IngredientsScreen)\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\RecipesScreen.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Header\\Header.js",["119","120","121","122","123"],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { constants as c } from '../Constants'\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  left: 0;\r\n  height: ${c.navHeight}px;\r\n  top: 0;\r\n  z-index: 2;\r\n`\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Element = styled.li`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    height: 100%;\r\n    letter-spacing: 1px;\r\n    margin: 0 10px;\r\n    color: white;\r\n    position: relative;\r\n    opacity: 0.8;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    transition: opacity 0.3s ease-in-out;\r\n\r\n    &::after {\r\n      content: '';\r\n      height: 2px;\r\n      background: white;\r\n      display: block;\r\n      width: 0;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 120%;\r\n      transition: width 0.4s ease-in-out;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 1;\r\n      transition: opacity 0.3s ease-in-out;\r\n\r\n      &::after {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Logo = styled.h1`\r\n  font-family: 'Libre Baskerville', serif;\r\n  font-style: italic;\r\n  color: white;\r\n  letter-spacing: 2px;\r\n  opacity: 0.8;\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst NavInner = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n`\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <Nav>\r\n      <NavInner>\r\n        <Logo>FoodRecipes</Logo>\r\n        <List>\r\n          <Element>\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              onClick={() => {\r\n                props.openModal('login')\r\n              }}\r\n            >\r\n              Login\r\n            </a>\r\n          </Element>\r\n          <Element>\r\n            <a\r\n              href=\"javascript:void(0)\"\r\n              onClick={() => {\r\n                props.openModal('register')\r\n              }}\r\n            >\r\n              Register\r\n            </a>\r\n          </Element>\r\n        </List>\r\n      </NavInner>\r\n    </Nav>\r\n  )\r\n}\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\CommonStyledComponents.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Components\\Ingredient.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Components\\TableHeader.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\Components\\Recipe.js",["124"],"import styled from 'styled-components'\r\nimport TimerIcon from '@material-ui/icons/Timer'\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\r\n\r\nconst Box = styled.div`\r\n  border-radius: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 31.3%;\r\n  margin: 1%;\r\n  background: white;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n`\r\n\r\nconst BoxHeader = styled.div`\r\n  background: rgb(55, 59, 96);\r\n  padding: 3% 4%;\r\n\r\n  p {\r\n    color: white;\r\n    font-size: 90%;\r\n    font-weight: 500;\r\n    text-align: left;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst BoxContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding: 8% 5%;\r\n`\r\n\r\nconst InfoSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  svg {\r\n    font-size: 200%;\r\n    color: rgba(55, 59, 96, 0.8);\r\n  }\r\n\r\n  .label {\r\n    font-weight: 700;\r\n    font-size: 70%;\r\n    margin-top: 5px;\r\n    color: rgba(0, 0, 0, 0.5);\r\n  }\r\n\r\n  .info {\r\n    font-size: 120%;\r\n    font-weight: 600;\r\n    margin: 0 auto;\r\n  }\r\n`\r\n\r\nexport default function Recipe(props) {\r\n  const { name, time, difficulty, price } = props.data\r\n\r\n  return (\r\n    <Box>\r\n      <BoxHeader>\r\n        <p>{name}</p>\r\n      </BoxHeader>\r\n      <BoxContent>\r\n        <InfoSection>\r\n          <TimerIcon />\r\n          <p className=\"label\">TIME TO COOK</p>\r\n          <p className=\"info\">{time}</p>\r\n        </InfoSection>\r\n        <InfoSection>\r\n          <LocalOfferIcon />\r\n          <p className=\"label\">APPROX. COST</p>\r\n          <p className=\"info\">{price} lei</p>\r\n        </InfoSection>\r\n      </BoxContent>\r\n    </Box>\r\n  )\r\n}\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Components\\AddIngredientForm.js",["125","126","127","128","129","130"],"import React from 'react'\r\nimport {\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    TextField,\r\n    Button\r\n} from '@material-ui/core'\r\nimport {\r\n    addIngredient,\r\n    getIngredients,\r\n    updateIngredient\r\n} from '../Controllers/IngredientsActions'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst FormContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    min-width: 300px;\r\n    padding: 30px 20px;\r\n    background: white;\r\n    border-radius: 4px;\r\n`\r\n\r\nclass AddIngredientForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            unitType: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            unitType: event.target.value\r\n        })\r\n    }\r\n\r\n    updateValue = (type, content) => {\r\n        switch (type) {\r\n            case 'name':\r\n                this.setState({\r\n                    name: content\r\n                })\r\n                break\r\n            case 'qty':\r\n                this.setState({\r\n                    qty: content\r\n                })\r\n        }\r\n    }\r\n\r\n    clearForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            qty: ''\r\n        })\r\n        this.props.getIngredients()\r\n        this.props.close()\r\n    }\r\n\r\n    sendIngredient = () => {\r\n        this.props.addIngredient(\r\n            {\r\n                name: this.state.name,\r\n                qty: this.state.qty\r\n            },\r\n            this.clearForm\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <FormContainer>\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Name\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                        this.updateValue('name', e.target.value)\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\"Quantity\"\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => {\r\n                        this.updateValue('qty', e.target.value)\r\n                    }}\r\n                />\r\n                <Button variant=\"outlined\" onClick={this.sendIngredient}>\r\n                    Add Ingredient\r\n                </Button>\r\n            </FormContainer>\r\n        )\r\n    }\r\n}\r\nexport default connect((state) => ({ ...state }), {\r\n    addIngredient,\r\n    getIngredients\r\n})(AddIngredientForm)\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Helpers\\Modal\\Modal.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Reducer.js",["131","132"],"import { CallToActionRounded } from '@material-ui/icons'\r\nimport { getIngredients } from './Screens/Dashboard/Ingredients/Controllers/IngredientsActions'\r\n\r\nconst INITIAL_STATE = {\r\n    loggedIn: false,\r\n    ingredients: [],\r\n    recipes: [],\r\n    username: ''\r\n}\r\n\r\nconst Reducer = function (state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'GET_INGREDIENTS':\r\n            return { ...state, ingredients: action.ingredients }\r\n        case 'GET_RECIPES':\r\n            return { ...state, recipes: action.payload }\r\n        case 'LOGGED_IN':\r\n            localStorage.setItem('token', action.token)\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                jwt: action.token,\r\n                ingredients: []\r\n            }\r\n        case 'IS_LOGGED':\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                jwt: action.token,\r\n                ingredients: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default Reducer\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Ingredients\\Controllers\\IngredientsActions.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Auth\\Controllers\\AuthActions.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recommendations\\Components\\PickMeal.js",[],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recommendations\\Components\\PickRecipes.js",["133"],"import React from 'react'\r\nimport Recipe from '../../Recipes/Components/Recipe'\r\nimport { connect } from 'react-redux'\r\n\r\nclass PickRecipes extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            recipes: this.props.recipes\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <>\r\n                {this.state.recipes.map((recipe) => {\r\n                    ;<Recipe data={recipe} />\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        recipes: state.recipes\r\n    }),\r\n    {}\r\n)(PickRecipes)\r\n","C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\Components\\AddRecipeForm.js",["134"],"C:\\main\\Projects\\FoodRecipes\\frontend\\src\\Screens\\Dashboard\\Recipes\\Controllers\\RecipeActions.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":50,"nodeType":"141","messageId":"142","endLine":2,"endColumn":54},{"ruleId":"139","severity":1,"message":"143","line":4,"column":17,"nodeType":"141","messageId":"142","endLine":4,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":11,"column":8,"nodeType":"146","endLine":11,"endColumn":10,"suggestions":"147"},{"ruleId":"139","severity":1,"message":"148","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":155,"column":9,"nodeType":"151","messageId":"152","endLine":175,"endColumn":10},{"ruleId":"153","severity":1,"message":"154","line":171,"column":13,"nodeType":"155","messageId":"156","endLine":174,"endColumn":19},{"ruleId":"139","severity":1,"message":"157","line":129,"column":7,"nodeType":"141","messageId":"142","endLine":129,"endColumn":14},{"ruleId":"139","severity":1,"message":"158","line":14,"column":5,"nodeType":"141","messageId":"142","endLine":14,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":93,"column":13,"nodeType":"161","endLine":98,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":94,"column":20,"nodeType":"164","messageId":"165","endLine":94,"endColumn":40},{"ruleId":"159","severity":1,"message":"160","line":103,"column":13,"nodeType":"161","endLine":108,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":104,"column":20,"nodeType":"164","messageId":"165","endLine":104,"endColumn":40},{"ruleId":"139","severity":1,"message":"166","line":60,"column":23,"nodeType":"141","messageId":"142","endLine":60,"endColumn":33},{"ruleId":"139","severity":1,"message":"167","line":3,"column":5,"nodeType":"141","messageId":"142","endLine":3,"endColumn":15},{"ruleId":"139","severity":1,"message":"168","line":4,"column":5,"nodeType":"141","messageId":"142","endLine":4,"endColumn":11},{"ruleId":"139","severity":1,"message":"169","line":5,"column":5,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"139","severity":1,"message":"170","line":6,"column":5,"nodeType":"141","messageId":"142","endLine":6,"endColumn":16},{"ruleId":"139","severity":1,"message":"158","line":13,"column":5,"nodeType":"141","messageId":"142","endLine":13,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":43,"column":9,"nodeType":"151","messageId":"152","endLine":53,"endColumn":10},{"ruleId":"139","severity":1,"message":"171","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":29},{"ruleId":"139","severity":1,"message":"172","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":24},{"ruleId":"173","severity":1,"message":"174","line":18,"column":50,"nodeType":"175","messageId":"176","endLine":18,"endColumn":52},{"ruleId":"149","severity":1,"message":"150","line":68,"column":9,"nodeType":"151","messageId":"152","endLine":88,"endColumn":10},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["179"],"'checkLogin' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'MenuBtn' is assigned a value but never used.","'updateIngredient' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'difficulty' is assigned a value but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'CallToActionRounded' is defined but never used.","'getIngredients' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},"Update the dependencies array to be: [props]",{"range":"182","text":"183"},[408,410],"[props]"]